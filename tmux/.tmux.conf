##########
## Tmux ##
##########
set -g default-shell /bin/zsh
set -g default-terminal "screen-256color"
set-option -g focus-event on
set-option -ag terminal-overrides ',xterm-256color:Tc'
set-option -sg escape-time 10
set -g mouse on

# Increase number of history
set -g history-limit 10000

# Change the prefix
unbind C-b
set -g prefix C-a

# Reload config
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded tmux conf"

# Splitting panes
unbind -
unbind |
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Move through panes.
bind -n C-h select-pane -L
bind -n C-j select-pane -D
bind -n C-k select-pane -U
bind -n C-l select-pane -R

# Managing Windows
unbind n
unbind w
bind n command-promp "rename-window '%%'"
bind w new-window -c "#{pane_current_path}"

# Move through Windows
bind -r l next-window
bind -r h previous-window

# Set base index to 1 
set -g base-index 1
set-window-option -g pane-base-index 1

# Copy mode
set-window-option -g mode-keys vi # Set vi motion keys on copy mode.
unbind -T copy-mode-vi Space
unbind -T copy-mode-vi Enter

# bind -T copy-mode-vi v send-keys -X begin-selection
# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"

# vim integration
# mart pane switching with awareness of Vim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

# Status-Bar config
onedark_black="#282c34"
onedark_blue="#61afef"
onedark_yellow="#e5c07b"
onedark_red="#e06c75"
onedark_white="#aab2bf"
onedark_green="#98c379"
onedark_visual_grey="#3e4452"
onedark_comment_grey="#5c6370"
#+---------+
#+ Options +
#+---------+
set -g status-interval 1
set -g status on

#+--------+
#+ Status +
#+--------+
#+--- Layout ---+
set -g status-justify left

#+--- Colors ---+
set -g status-style bg=$onedark_visual_grey

#+-------+
#+ Panes +
#+-------+
set -g pane-border-style bg=$onedark_white,fg=brightblack
set -g pane-active-border-style bg=default,fg=default
set -g display-panes-colour default
set -g display-panes-active-colour default

#+------------+
#+ Clock Mode +
#+------------+
setw -g clock-mode-colour cyan

#+----------+
#+ Messages +
#+---------+
set -g message-style bg=brightblack,fg=cyan
set -g message-command-style bg=brightblack,fg=cyan

#+--------+
#+ Status +
#+--------+
#+--- Bars ---+
set -g status-left "#[fg=colour234,bg=$onedark_blue,bold] #S "
set -g status-right "#[fg=white, bold,bg=$onedark_red] %Y-%m-%d #[fg=white, bold,bg=$onedark_red,nobold,noitalics,nounderscore]|#[fg=white, bold,bg=$onedark_red] %H:%M #[fg=black,bg=$onedark_blue,bold] #H "

#+--- Windows ---+
set -g window-status-format "#[fg=white,bg=$onedark_comment_grey] #I #[fg=white,bg=$onedark_comment_grey]#W #F "
set -g window-status-current-format "#[fg=black,bg=$onedark_green] #I#[fg=black,bg=$onedark_green,nobold,noitalics,nounderscore] #[fg=black,bg=$onedark_green]#W #F "
set -g window-status-separator ""
